import { BalanceBuilder, ContractBuilder } from '@moonbeam-network/xcm-builder';
import { AssetConfig } from '../AssetConfig';
import { ChainConfig } from '../ChainConfig';
import {
  ausd,
  bnc,
  crab,
  csm,
  hko,
  kar,
  kbtc,
  kint,
  kma,
  ksm,
  lit,
  movr,
  pha,
  rmrk,
  sdn,
  teer,
  usdt,
  xrt,
} from '../assets';
import {
  bifrostKusama,
  calamari,
  crustShadow,
  darwiniaCrab,
  integritee,
  karura,
  khala,
  kinitsugi,
  kusama,
  litmus,
  moonriver,
  parallel,
  robonomics,
  shiden,
  statemine,
} from '../chains';

export const moonriverConfig = new ChainConfig({
  assets: [
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: bifrostKusama,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: calamari,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: crustShadow,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: karura,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: khala,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: parallel,
    }),
    new AssetConfig({
      asset: movr,
      balance: BalanceBuilder().system().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: shiden,
    }),
    new AssetConfig({
      asset: ausd,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: karura,
    }),
    new AssetConfig({
      asset: bnc,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: bifrostKusama,
    }),
    new AssetConfig({
      asset: crab,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: darwiniaCrab,
    }),
    new AssetConfig({
      asset: csm,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: crustShadow,
    }),
    new AssetConfig({
      asset: hko,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: parallel,
    }),
    new AssetConfig({
      asset: kar,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: karura,
    }),
    new AssetConfig({
      asset: kbtc,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: kinitsugi,
    }),
    new AssetConfig({
      asset: kint,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: kinitsugi,
    }),
    new AssetConfig({
      asset: kma,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: calamari,
    }),
    new AssetConfig({
      asset: ksm,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: kusama,
    }),
    new AssetConfig({
      asset: lit,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: litmus,
    }),
    new AssetConfig({
      asset: pha,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: khala,
    }),
    new AssetConfig({
      asset: rmrk,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: statemine,
    }),
    new AssetConfig({
      asset: rmrk,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: statemine,
    }),
    new AssetConfig({
      asset: sdn,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: shiden,
    }),
    new AssetConfig({
      asset: teer,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: integritee,
    }),
    new AssetConfig({
      asset: usdt,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: statemine,
    }),
    new AssetConfig({
      asset: xrt,
      balance: BalanceBuilder().assets().account(),
      contract: ContractBuilder().xTokens().transfer(),
      destinations: robonomics,
    }),
  ],
  chain: moonriver,
});
